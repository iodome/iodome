name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma client
        working-directory: apps/nextjs-prisma-postgres
        run: pnpm exec prisma generate

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/apps/**/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('apps/*/package.json') }}-${{ hashFiles('apps/**/*.[jt]s', 'apps/**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('apps/*/package.json') }}-

      - name: Setup database schema
        working-directory: apps/nextjs-prisma-postgres
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
        run: pnpm exec prisma db push

      - name: Build packages
        run: pnpm build

      - name: Get Playwright version
        working-directory: apps/nextjs-prisma-postgres
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm exec playwright --version)" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}

      - name: Install Playwright browsers and dependencies
        working-directory: apps/nextjs-prisma-postgres
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      
      - name: Install Playwright system dependencies only
        working-directory: apps/nextjs-prisma-postgres
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: sudo pnpm exec playwright install-deps webkit

      - name: Run Vitest tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
        run: pnpm test

      - name: Run Playwright tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
        run: pnpm test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: "**/playwright-report/"
          retention-days: 30
